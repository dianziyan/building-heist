//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
namespace GiveUp.Core
{
    public class CloseCombatAction : ActionBase
    {

        public bool DisabledAction { get; set; }
        public NpcCore owner;
        public Transform CloseCombatAttackObject;

        public CloseCombatAction(NpcCore owner, float attackTime) : base()
        {
            if (owner == null || owner.CloseCombatAttackObject == null)
            {
                IsReady = false;
                return;
            }

            Timer = new ActionTimer(attackTime, EndAction);
            CloseCombatAttackObject = owner.CloseCombatAttackObject;
            CloseCombatAttackObject.gameObject.SetActive(false);
        }
            public override void StartAction()
            {
                if (DisabledAction)
                    return;

                if (!IsReady)
                    return;

                base.StartAction();
                Timer.Reset();
                Timer.Start();
                CloseCombatAttackObject.gameObject.SetActive(true);
            }

            public override void EndAction()
            {
                if (!IsReady)
                    return;

                CloseCombatAttackObject.gameObject.SetActive(false);
                base.EndAction();
            }
			
			public override void Update()
            {
                if (!IsReady || DisabledAction)
                    return;

                if (IsActionHappening)
                {
                    Timer.Update();
                }
			}
		}
}

